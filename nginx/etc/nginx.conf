
user  web www-data;
worker_processes  1;
timer_resolution  100ms;
worker_rlimit_nofile 8192;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections 2048;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    gzip  on;

    # gergely.
    include   nginx.gergely.conf;

    # data. : bittorrent
    include nginx.bittorrent.conf;

    # bbs.ignitetaipei.tw
    include nginx.bbs-ignite.conf;

    server {
        listen       80;
        server_name  imreh.net www.imreh.net;

        access_log  /var/log/nginx/www.access.log  main;

        location / {
            root   /srv/web/www;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # HTTPS server
    #
    #server {
    #    listen       443;
    #    server_name  localhost;

    #    ssl                  on;
    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_timeout  5m;

    #    ssl_protocols  SSLv2 SSLv3 TLSv1;
    #    ssl_ciphers  ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;
    #    ssl_prefer_server_ciphers   on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

	### Setup LifeWiki on a separate subdomain,
	### so we don't need rewrite or strange ports
	server {
		listen      80;
		server_name lifewiki.imreh.net;
		rewrite     ^(.*)   https://$server_name$1 permanent;
	}

	server {
		listen 443;
		server_name lifewiki.imreh.net;

		ssl	on;
		ssl_certificate		/srv/web/certs/_.imreh.net;
		ssl_certificate_key	/srv/web/certs/_.imreh.net;
		ssl_session_timeout 5m;
		ssl_protocols	SSLv3 TLSv1;
		ssl_ciphers  ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;
		ssl_prefer_server_ciphers on;

		access_log  /var/log/nginx/lifewiki.access.log  main;
		error_log  /var/log/nginx/lifewiki.error.log;

		## Send static content to its own subdomain, so it can be better cached
		location /moin_static193/ {
			expires max;
			add_header    Cache-Control  public;
			rewrite ^(.*)$ http://static.imreh.net$1 permanent;
		}

		location / {
			include fastcgi_params;
			fastcgi_param PATH_INFO $uri;
			if (!-f $request_filename) {
				fastcgi_pass unix:/tmp/moinfcgi.sock;
			}
		}

	}



	### Static content
	server {
		listen 80;
		server_name static.imreh.net;

		expires max;
		add_header	Cache-Control "public";

		root /srv/web/static/;

		## Wiki static elements
		location /moin_static193/ {
			alias /usr/lib/python2.4/site-packages/MoinMoin/web/static/htdocs/;
		}
	}


	### Wildcard server to catch the rest
	server {
		listen 80;
		server_name *.imreh.net;

		expires 30d;
		add_header    Cache-Control  private;

		root /srv/web/www;
		index index.html index.htm;

		access_log  /var/log/nginx/wildcard.access.log  main;
	}

}

